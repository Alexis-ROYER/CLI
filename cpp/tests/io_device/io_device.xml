<?xml version="1.0" encoding="ISO-8859-1"?>

<!--
    This file is part of the CLI library.  The CLI library aims to provide
    facilities in making text-based user interfaces.
    Copyright (C) 2006-2007 Alexis Royer.

    This library is free software; you can redistribute it and/or
    modify it under the terms of the GNU Lesser General Public
    License as published by the Free Software Foundation; either
    version 2.1 of the License, or (at your option) any later version.

    This library is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
    Lesser General Public License for more details.

    You should have received a copy of the GNU Lesser General Public
    License along with this library; if not, write to the Free Software
    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
-->

<cli name="io-device" xmlns="http://alexis.royer.free.fr/CLI">

    <cpp option="include">#include &lt;cli/single_command.h&gt;</cpp>
    <cpp option="include">#include &lt;cli/file_device.h&gt;</cpp>
    <cpp option="include">#include "io_device_impl.h"</cpp>

    <cpp>using namespace cli;</cpp>

    <cpp>OutputDevice* pcli_Device = NULL;</cpp>
    <cpp>STREAM_TYPE e_Use = OUTPUT_STREAM;</cpp>
    <cpp>bool b_ShellTarget = false;</cpp>

    <keyword string="set"><help lang="en">Set device command</help>

        <tag ref="instance"/>

        <!-- Select or create an instance. -->
        <tag id="instance" hidden="yes">
            <keyword string="device"><help lang="en">Device identification</help>
                <keyword string="null"><help lang="en">Null device</help>
                    <cpp>pcli_Device = &amp; OutputDevice::GetNullDevice();</cpp>
                    <tag ref="post-instance"/>
                </keyword>
                <keyword string="stdout"><help lang="en">Standard output device</help>
                    <cpp>pcli_Device = &amp; OutputDevice::GetStdOut();</cpp>
                    <tag ref="post-instance"/>
                </keyword>
                <keyword string="stderr"><help lang="en">Standard error device</help>
                    <cpp>pcli_Device = &amp; OutputDevice::GetStdErr();</cpp>
                    <tag ref="post-instance"/>
                </keyword>
                <keyword string="io_mux"><help lang="en">This program input / output multiplexer device</help>
                    <cpp>pcli_Device = &amp; GetIOMux();</cpp>
                    <tag ref="post-instance"/>
                </keyword>
                <keyword string="new"><help lang="en">New devices creation</help>
                    <keyword string="single-command"><help lang="en">Single command line device</help>
                        <param id="cmd-line" type="string"><help lang="en">Command line</help>
                            <cpp>pcli_Device = new SingleCommand(<value-of param="cmd-line"/>, GetIOMux(), true);</cpp>
                            <tag ref="post-instance"/>
                        </param>
                    </keyword>
                    <keyword string="output-file"><help lang="en">Output file device</help>
                        <param id="output-file-name" type="string"><help lang="en">File name</help>
                            <cpp>pcli_Device = new OutputFileDevice(<value-of param="output-file-name"/>, true);</cpp>
                            <tag ref="post-instance"/>
                        </param>
                    </keyword>
                    <keyword string="input-file"><help lang="en">File name</help>
                        <param id="input-file-name" type="string"><help lang="en">File name</help>
                            <cpp>pcli_Device = new InputFileDevice(<value-of param="input-file-name"/>, GetIOMux(), true);</cpp>
                            <tag ref="post-instance"/>
                        </param>
                    </keyword>
                </keyword>
            </keyword>
        </tag>
        <tag id="post-instance" hidden="yes"><tag ref="use"/></tag>

        <!-- Define the role o this instance. -->
        <tag id="use" hidden="yes">
            <keyword string="for"><help lang="en">Indicate device use</help>
                <keyword string="welcome"><help lang="en">Welcome stream modification</help>
                    <cpp>e_Use = WELCOME_STREAM;</cpp>
                    <tag ref="post-use"/>
                </keyword>
                <keyword string="prompt"><help lang="en">Prompt stream modification</help>
                    <cpp>e_Use = PROMPT_STREAM;</cpp>
                    <tag ref="post-use"/>
                </keyword>
                <keyword string="echo"><help lang="en">Echo stream modification</help>
                    <cpp>e_Use = ECHO_STREAM;</cpp>
                    <tag ref="post-use"/>
                </keyword>
                <keyword string="output"><help lang="en">Output stream modification</help>
                    <cpp>e_Use = OUTPUT_STREAM;</cpp>
                    <tag ref="post-use"/>
                </keyword>
                <keyword string="error"><help lang="en">Error stream modification</help>
                    <cpp>e_Use = ERROR_STREAM;</cpp>
                    <tag ref="post-use"/>
                </keyword>
                <keyword string="input"><help lang="en">Input stream modification</help>
                    <cpp>e_Use = STREAM_TYPES_COUNT;</cpp>
                    <tag ref="post-use"/>
                </keyword>
            </keyword>
        </tag>
        <tag id="post-use" hidden="yes"><tag ref="target"/></tag>

        <!-- Attachement. -->
        <tag id="target" hidden="yes">
            <keyword string="to"><help lang="en">Define target</help>
                <keyword string="shell"><help lang="en">Target is shell</help>
                    <cpp>b_ShellTarget = true;</cpp>
                    <tag ref="post-target"/>
                </keyword>
                <keyword string="io_mux"><help lang="en">Target is this program input / output multiplexer device</help>
                    <cpp>b_ShellTarget = false;</cpp>
                    <tag ref="post-target"/>
                </keyword>
            </keyword>
        </tag>
        <tag id="post-target" hidden="yes"><tag ref="execute"/></tag>

        <!-- Execution. -->
        <tag id="execute" hidden="yes">
            <endl><cpp>SetDevice(b_ShellTarget, e_Use, pcli_Device);</cpp></endl>
        </tag>
    </keyword>

</cli>

